


[virtual_sdcard]
path: /home/sam/printer_data/gcodes # Your g code installation path
on_error_gcode: CANCEL_PRINT
 
 
[stepper_x]
step_pin: PA5
dir_pin: PA4
enable_pin: !PC3
microsteps: 32
rotation_distance: 40
position_endstop: -34
position_min:-38
position_max: 229
homing_speed: 40
endstop_pin: tmc2209_stepper_x:virtual_endstop
homing_retract_dist: 0
 
[tmc2209 stepper_x]
uart_pin: PA15
#tx_pin: PA9
uart_address: 3
#select_pins: !PB4
diag_pin: PA6
driver_SGTHRS: 80
run_current: 0.9
stealthchop_threshold: 999999
interpolate: True
 
[stepper_y]
step_pin: PC4
dir_pin: PA7
enable_pin: !PC3
microsteps: 32
rotation_distance: 40
position_endstop: -4 #Needs adjustment, i have custom carriage
position_min:-4
position_max: 229
homing_speed: 40
endstop_pin: tmc2209_stepper_y:virtual_endstop
homing_retract_dist: 0
 
[tmc2209 stepper_y]
uart_pin: PA15
#tx_pin: PA9
#select_pins: !PB4
uart_address: 1
run_current: 0.6
diag_pin: ^PC5      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 80 # 255 is most sensitive value, 0 is least sensitive
stealthchop_threshold: 999999
 
[probe]
pin: PB8
x_offset: 43.5
y_offset: 4.7
z_offset: 1.810
samples: 5
samples_result: average
samples_tolerance: 0.05
samples_tolerance_retries: 5
sample_retract_dist: 0.5
speed:1
lift_speed:5
 
 
[stepper_z]
step_pin: PC7
dir_pin: !PC6
enable_pin: !PC3
microsteps: 256
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
#endstop_pin: PB8
#position_endstop: 1.35
position_min: -5
position_max: 230
homing_speed: 5
second_homing_speed:1
homing_retract_dist: 2.3
 
[tmc2209 stepper_z]
uart_pin: PA15
#tx_pin: PA9
#select_pins: !PB4
uart_address: 2
run_current: 0.6
diag_pin: ^PA8      # Set to MCU pin connected to TMC DIAG pin
driver_SGTHRS: 50  # 255 is most sensitive value, 0 is least sensitive
stealthchop_threshold: 999999
 
[extruder]
max_extrude_cross_section: 50.0 
max_extrude_only_distance: 1500
step_pin: PC14
dir_pin: PC15
enable_pin: !PC3
microsteps: 64
rotation_distance: 8.204
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F #Might need adjustment, i have new temp sensor along with V6 heatblock and heatbreak.
sensor_pin: PC1
pressure_advance: 0.05
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
min_extrude_temp: 0
max_temp: 300 #Stock is 250
 
#[firmware_retraction]
#retract_length: 0.5 #stock is more than 2
#retract_speed:20
#unretract_extra_length:0
#unretract_speed:20
 
[tmc2208 extruder]
uart_pin: PA15
run_current: 0.7
stealthchop_threshold: 999999
 
[heater_bed]
heater_pin: PA0
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130
 
[safe_z_home]
home_xy_position: 70.5, 109.3 # Change coordinates to the center of your print bed
speed: 50
z_hop: 5               # Move up 5mm
z_hop_speed: 10
 
[bed_mesh]
speed: 50
horizontal_move_z: 10
mesh_min: 19, 19
mesh_max: 210, 210
probe_count: 6, 6
fade_start: 1
fade_end: 10
fade_target: 0
mesh_pps : 2, 2
algorithm: lagrange
 
[controller_fan controller_fan]
pin: PA14
fan_speed: 0.7
 
[heater_fan extruder_fan]
pin: PA13
heater_temp: 65.0
 
[fan]
pin: PB9
 
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
 
 
[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 4000
max_z_velocity: 20
max_z_accel: 20
 
 
[pause_resume]
 
[display_status]
 
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
 
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
 
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
 